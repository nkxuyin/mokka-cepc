/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class CGARunManager */

#ifndef _Included_CGARunManager
#define _Included_CGARunManager
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     CGARunManager
 * Method:    init
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_CGARunManager_init
  (JNIEnv *, jobject, jstring, jstring, jstring, jstring, jstring, jstring);

/*
 * Class:     CGARunManager
 * Method:    beamOn
 * Signature: ([D[D[DLjava/lang/String;FI)V
 */
JNIEXPORT void JNICALL Java_CGARunManager_beamOn
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jdoubleArray, jstring, jfloat, jint);

/*
 * Class:     CGARunManager
 * Method:    whereAmI
 * Signature: ([D)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_CGARunManager_whereAmI
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     CGARunManager
 * Method:    getSteps
 * Signature: (Ljava/util/Vector;)V
 */
JNIEXPORT void JNICALL Java_CGARunManager_getSteps
  (JNIEnv *, jobject, jobject);

/*
 * Class:     CGARunManager
 * Method:    getVolumeData
 * Signature: (Ljava/lang/String;Ljava/util/Vector;)V
 */
JNIEXPORT void JNICALL Java_CGARunManager_getVolumeData
  (JNIEnv *, jobject, jstring, jobject);

/*
 * Class:     CGARunManager
 * Method:    setSD
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_CGARunManager_setSD
  (JNIEnv *, jobject, jint);

/*
 * Class:     CGARunManager
 * Method:    cellIndex
 * Signature: (II)Ljava/util/Vector;
 */
JNIEXPORT jobject JNICALL Java_CGARunManager_cellIndex
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     CGARunManager
 * Method:    getCellId
 * Signature: (LCellIdUtility;)V
 */
JNIEXPORT void JNICALL Java_CGARunManager_getCellId
  (JNIEnv *, jobject, jobject);

/*
 * Class:     CGARunManager
 * Method:    setTBConfigAngle
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_CGARunManager_setTBConfigAngle
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     CGARunManager
 * Method:    getBdl
 * Signature: ([D[D)D
 */
JNIEXPORT jdouble JNICALL Java_CGARunManager_getBdl
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray);

/*
 * Class:     CGARunManager
 * Method:    getEdl
 * Signature: ([D[D)D
 */
JNIEXPORT jdouble JNICALL Java_CGARunManager_getEdl
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray);

/*
 * Class:     CGARunManager
 * Method:    getB
 * Signature: ([D)Ljava/util/Vector;
 */
JNIEXPORT jobject JNICALL Java_CGARunManager_getB
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     CGARunManager
 * Method:    getE
 * Signature: ([D)Ljava/util/Vector;
 */
JNIEXPORT jobject JNICALL Java_CGARunManager_getE
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     CGARunManager
 * Method:    getLocalPosition
 * Signature: ([D)Ljava/util/Vector;
 */
JNIEXPORT jobject JNICALL Java_CGARunManager_getLocalPosition
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     CGARunManager
 * Method:    isCalorimeter
 * Signature: ([D)Z
 */
JNIEXPORT jboolean JNICALL Java_CGARunManager_isCalorimeter
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     CGARunManager
 * Method:    isTracker
 * Signature: ([D)Z
 */
JNIEXPORT jboolean JNICALL Java_CGARunManager_isTracker
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     CGARunManager
 * Method:    getListOfLogicalVolumes
 * Signature: ([D)Ljava/util/Vector;
 */
JNIEXPORT jobject JNICALL Java_CGARunManager_getListOfLogicalVolumes
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     CGARunManager
 * Method:    getListOfPhysicalVolumes
 * Signature: ([D)Ljava/util/Vector;
 */
JNIEXPORT jobject JNICALL Java_CGARunManager_getListOfPhysicalVolumes
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     CGARunManager
 * Method:    getRegionName
 * Signature: ([D)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_CGARunManager_getRegionName
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     CGARunManager
 * Method:    getMaterialName
 * Signature: ([D)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_CGARunManager_getMaterialName
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     CGARunManager
 * Method:    getDensity
 * Signature: ([D)D
 */
JNIEXPORT jdouble JNICALL Java_CGARunManager_getDensity
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     CGARunManager
 * Method:    getTemperature
 * Signature: ([D)D
 */
JNIEXPORT jdouble JNICALL Java_CGARunManager_getTemperature
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     CGARunManager
 * Method:    getPressure
 * Signature: ([D)D
 */
JNIEXPORT jdouble JNICALL Java_CGARunManager_getPressure
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     CGARunManager
 * Method:    getRadLen
 * Signature: ([D)D
 */
JNIEXPORT jdouble JNICALL Java_CGARunManager_getRadLen
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     CGARunManager
 * Method:    getIntLen
 * Signature: ([D)D
 */
JNIEXPORT jdouble JNICALL Java_CGARunManager_getIntLen
  (JNIEnv *, jobject, jdoubleArray);

#ifdef __cplusplus
}
#endif
#endif
